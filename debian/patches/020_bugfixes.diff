--- sabre-0.2.4b.orig/sdlsrc/input.C
+++ sabre-0.2.4b/sdlsrc/input.C
@@ -26,6 +26,8 @@
  * Device input (mouse & joystick)               *
  * 12/98 David Vandewalle : SDL Port             *
  *************************************************/
+/* Small fix by Milan Zamazal <pdm@debian.org> on 1999-10-03 to allow
+   compilation with gcc 2.95, see #ifdef DEBIAN. */
 #define HAVE_LIBSDL
 
 #include <stdio.h>
@@ -101,9 +103,13 @@
 {
 #ifdef HAVE_LIBSDL
      float scx,scy;
+#ifdef DEBIAN
+     int SDL_x,SDL_y;
+#else
      unsigned short SDL_x,SDL_y;
+#endif
      SDL_PollEvent(NULL);
-     buttons = SDL_GetMouseState(&SDL_x, &SDL_y);    
+     buttons = SDL_GetMouseState(&SDL_x, &SDL_y);
      screenx = SDL_x;
      screeny = SDL_y;
      scx = (float) screenx;
--- sabre-0.2.4b.orig/sdlsrc/kbdhit.C
+++ sabre-0.2.4b/sdlsrc/kbdhit.C
@@ -17,6 +17,10 @@
     along with this program; if not, write to the Free Software
     Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 */
+/* Fixes by Milan Zamazal <pdm@debian.org> (see #ifdef DEBIAN):
+   1999-10-03: Allow compilation with new SDL.
+   1999-11-27: Q&D hack allowing use of cursor keys in sabresdl.
+*/
 #define HAVE_LIBSDL
 
 #ifdef SABREWIN
@@ -46,6 +50,31 @@
 // #define TESTME
 
 
+#ifdef DEBIAN
+#ifdef HAVE_LIBSDL
+// Q&D hack, sorry
+static const int sdl_to_standard[256] =
+{   0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15,
+   16,'i','m','l','j', 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
+   32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47,
+   48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63,
+   64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,
+   80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95,
+   96, 97, 98, 99,100,101,102,103,104,105,106,107,108,109,110,111,
+  112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,
+  128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,
+  144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,
+  160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,
+  176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,
+  192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,
+  208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,
+  224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,
+  240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255
+};
+#endif
+#endif
+
+
 KBHit kbhit;
 int   KBHit::kbdin = 0;
 KBHit::KBHit()
@@ -62,6 +91,12 @@
   tcsetattr(0,TCSANOW,&newios);
   FD_ZERO(&rfds);
   FD_SET(0,&rfds);
+
+#ifdef DEBIAN
+#if 0
+  SDL_EnableUNICODE (1);
+#endif
+#endif
 }
 
 int KBHit::kbdhit()
@@ -80,7 +115,11 @@
   SDL_Event event;
 #endif
 
+#ifdef DEBIAN
+  unsigned char c;
+#else
   char c;
+#endif
 
 #ifdef HAVE_LIBSDL
   if(SDL_PollEvent(&event))
@@ -89,20 +128,33 @@
 #endif
       {
 #ifdef HAVE_LIBSDL
+#ifdef DEBIAN
+	c=event.key.keysym.sym;
+	c = sdl_to_standard[c];
+#else
 	c=SDL_SymToASCII(&(event.key.keysym),NULL);
+#endif
 #else
 	c = vga_getkey();
 #endif      
 	if (c==ESC)
 	  {
 #ifdef HAVE_LIBSDL
+#ifdef DEBIAN
+	    c=event.key.keysym.sym;
+#else
 	    c=SDL_SymToASCII(&(event.key.keysym),NULL);
+#endif
 #else
 	    c = vga_getkey();
 #endif     
 	    if (c=='[')
 #ifdef HAVE_LIBSDL 
+#ifdef DEBIAN
+	      c=event.key.keysym.sym;
+#else
 	      c=SDL_SymToASCII(&(event.key.keysym),NULL);
+#endif
 #else
 	    c = vga_getkey();
 #endif
--- sabre-0.2.4b.orig/sdlsrc/vga_13.C
+++ sabre-0.2.4b/sdlsrc/vga_13.C
@@ -579,3 +579,12 @@
 
 }
 
+#ifdef DEBIAN
+void vga13_begin_scene()
+{
+}
+
+void vga13_end_scene()
+{
+}
+#endif
--- sabre-0.2.4b.orig/gdev/hello.C
+++ sabre-0.2.4b/gdev/hello.C
@@ -24,6 +24,8 @@
 
 #include "hello.h"
 
+#include <cmath>
+
 // --
 // -- main( options ) 
 // --
--- sabre-0.2.4b.orig/gdev/fontedit.C
+++ sabre-0.2.4b/gdev/fontedit.C
@@ -24,6 +24,8 @@
 
 #include "fontedit.h"
 
+#include <cstdlib>
+
 // --
 // -- main( options ) 
 // --
--- sabre-0.2.4b.orig/src/main.C
+++ sabre-0.2.4b/src/main.C
@@ -25,6 +25,9 @@
  * Author : Dan Hammer                           *
  * Main file                                     *
  *************************************************/
+/* Small fix by Milan Zamazal <pdm@debian.org> in 1999 to disable big security
+   hole, see #ifdef DEBIAN.
+   1999-12-17: Without SVGAlib compilation fix. */
 #define USING_SOUNDCLIENT
 
 #include <stdio.h>
@@ -40,12 +43,18 @@
 #include <fstream.h>
 #include <setjmp.h>
 #include <stdarg.h>
+#ifdef DEBIAN
+#ifndef DEBIAN_NO_LIBVGA
+#include <vga.h>
+#endif
+#else
+#include <vga.h>
+#endif
 
 #include "siminc.h"
 #include "simsnd.h"
 #include "game.h"
 #include "scnedit.h"
-#include "simsnd.h"
 #include "sbrkeys.h"
 
 #ifndef REV_DATE
@@ -119,6 +128,16 @@
  *************************************************************/
 main(int argc, char *argv[])
 {
+#ifdef DEBIAN
+#ifndef DEBIAN_NO_LIBVGA
+  vga_disabledriverreport();
+  if (vga_init())
+    {
+      printf("Cannot initialize VGA device.\n");
+      return -1;
+    }
+#endif
+#endif
   int i;
   int m;
   printf("Sabre Fighter Plane Simulator Version %s %s\n",
--- sabre-0.2.4b.orig/src/obj_3d.C
+++ sabre-0.2.4b/src/obj_3d.C
@@ -645,14 +645,9 @@
   READ_TOKI('(',is,c)
     is >> n_objects >> n_groups;
   READ_TOK(')',is,c)
-#ifdef SABREWIN
    objects = new C_3DObject2[n_objects];
   for (i=0;i<n_objects;i++)
     objects[i].im = im;
-#else
-  objects = new C_3DObject2[n_objects](im);
-  MYCHECK(objects != NULL);
-#endif
   groups = new C_3DObject_Group[n_groups];
   MYCHECK(groups != NULL);
   idx = 0;
--- sabre-0.2.4b.orig/src/txtrmap.C
+++ sabre-0.2.4b/src/txtrmap.C
@@ -27,6 +27,8 @@
  *          compressed files to make compatible  *
  *          with 64bit machines                  *
  *************************************************/
+/* 2001-07-22: Modified by Milan Zamazal <pdm@debian.org> to make the file
+   compilable with gcc 3.  See `#ifdef DEBIAN' for more details. */
 #ifdef SABREWIN
 #include <windows.h>
 #endif
@@ -181,9 +183,15 @@
 #endif
 			if (open_libos(os,fname))
 			{
+#ifdef DEBIAN
+				os.write((char *)&map_w,sizeof(map_w));
+				os.write((char *)&map_h,sizeof(map_h));
+				os.write((char *)&n,sizeof(n));
+#else
 				os.write((unsigned char *)&map_w,sizeof(map_w));
 				os.write((unsigned char *)&map_h,sizeof(map_h));
 				os.write((unsigned char *)&n,sizeof(n));
+#endif
 				os.write(tgt,n);
 			}
 			delete [] fname;
--- sabre-0.2.4b.orig/src/rendpoly.C
+++ sabre-0.2.4b/src/rendpoly.C
@@ -34,6 +34,7 @@
 #include "simerr.h"
 #include "simfile.h"
 #include "rendpoly.h"
+#include "port_3d.h"
 
 /**********************************************************
  * Non z-buffered, flat color poly rendering             *
--- sabre-0.2.4b.orig/src/globals.C
+++ sabre-0.2.4b/src/globals.C
@@ -20,6 +20,8 @@
 /******************************************************************
  * globals                                                        *
  ******************************************************************/
+/* 1999-12-08: Changed by Milan Zamazal <pdm@debian.org> to point to default
+   library location on Debian, see #ifdef DEBIAN. */
 #include "stdio.h"
 #include "string.h"
 #include "vmath.h"
@@ -35,9 +37,13 @@
 #ifdef SABREWIN
 #define DEFAULT_LIB ".\\lib"
 #else
+#ifdef DEBIAN
+#define DEFAULT_LIB "/usr/share/games/sabre/lib"
+#else
 #define DEFAULT_LIB "./lib"
 #endif
 #endif
+#endif
 
 Mouse mouse;
 Joystick *joystick0 = NULL;
--- sabre-0.2.4b.orig/src/aibase.h
+++ sabre-0.2.4b/src/aibase.h
@@ -26,6 +26,8 @@
  * Defines skill levels, maneuver stack and      *
  * attacker list behavior.                       *
  *************************************************/
+/* Small fix by Milan Zamazal <pdm@debian.org> on 1999-10-03 to allow
+   compilation with gcc 2.95, see #ifdef DEBIAN. */
 #ifndef __aibase_h
 #define __aibase_h
 
@@ -144,7 +146,11 @@
    int            affiliation;               /* whose side we're on          */
    int            active;                    /* active status                */
    char           handle[aiB_HANDLE_SIZE];   /* call sign                    */
+#ifdef DEBIAN
+   const char     *dbg;                      /* debug string                 */
+#else
    char           *dbg;                      /* debug string                 */
+#endif
    int            task;                      /* current task                 */
 
    sREAL          timeFrame;                 /* time in secs from last update*/
--- sabre-0.2.4b.orig/src/pilot.h
+++ sabre-0.2.4b/src/pilot.h
@@ -17,6 +17,9 @@
     along with this program; if not, write to the Free Software
     Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 */
+/* 1999-12-08: Small patch by Milan Zamazal <pdm@debian.org> to allow
+   compilation on Debian, see #ifdef DEBIAN. */
+
 #ifndef __pilot_h
 #define __pilot_h
 
@@ -138,7 +141,11 @@
   static Pilot   *pilots[];
   static int     npilots;
   static int     maxpilots;
+#ifdef DEBIAN
+  static int initPilot();
+#else
   static initPilot();
+#endif
   static Pilot *getPilot(char *hndle);
   static float xpixel_adjust, ypixel_adjust;
 
--- sabre-0.2.4b.orig/src/rendpoly.h
+++ sabre-0.2.4b/src/rendpoly.h
@@ -24,6 +24,7 @@
 #include "grafix.h"
 #include "clip.h"
 #include "convpoly.h"
+#include "port_3d.h"
 
 int rendpoly(R_3DPoint *poly, int n, int color, Port_3D &port, int zclip = 1);
 int project_poly(R_3DPoint *poly, int n, int color,
