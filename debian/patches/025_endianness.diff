Index: sabre-0.2.4b/src/mkterrain.c
===================================================================
--- sabre-0.2.4b.orig/src/mkterrain.c	2006-11-17 00:45:23.000000000 +0100
+++ sabre-0.2.4b/src/mkterrain.c	2006-11-17 01:21:53.000000000 +0100
@@ -21,6 +21,7 @@
 #include <stdarg.h>
 #include <string.h>
 #include <math.h>
+#include "swap.h"
 
 #define MAXLEN 70
 #define NO_ERR 0
@@ -70,20 +71,19 @@
 int found_palette;
 
 typedef struct PCX_HEADER {
-  char manufacturer;
-  char version;
-  char encoding;
-  char bits_per_pixel;
-  short  xmin,ymin;
-  short  xmax,ymax;
-  short  hres;
-  short  vres;
-  char palette16[48];
-  char reserved;
-  char color_planes;
-  short  bytes_per_line;
-  short  palette_type;
-  char filler[58];
+  int8_t  manufacturer;
+  int8_t  version;
+  int8_t  encoding;
+  int8_t  bits_per_pixel;
+  int16_t xmin, ymin;
+  int16_t xmax, ymax;
+  int16_t hres, vres;
+  int8_t  palette16[48];
+  int8_t  reserved;
+  int8_t  color_planes;
+  int16_t bytes_per_line;
+  int16_t palette_type;
+  int8_t  filler[58];
 } pcx_header;
 
 struct IMG {
@@ -403,6 +403,12 @@
     error_exit(1,"Couldn't Open %s",filename);
   fseek(infile,0L,SEEK_SET);
   fread(&pcxhead,sizeof(pcx_header),1,infile);
+  pcxhead.xmin = ltohs(pcxhead.xmin);
+  pcxhead.xmax = ltohs(pcxhead.xmax);
+  pcxhead.ymin = ltohs(pcxhead.ymin);
+  pcxhead.ymax = ltohs(pcxhead.ymax);
+  pcxhead.hres = ltohs(pcxhead.hres);
+  pcxhead.vres = ltohs(pcxhead.vres);
   image.xsize = (pcxhead.xmax-pcxhead.xmin) + 1;
   image.ysize = (pcxhead.ymax-pcxhead.ymin) + 1;
   Points = image.xsize * image.ysize;
Index: sabre-0.2.4b/src/mktextr.c
===================================================================
--- sabre-0.2.4b.orig/src/mktextr.c	2006-11-17 00:45:23.000000000 +0100
+++ sabre-0.2.4b/src/mktextr.c	2006-11-17 01:22:16.000000000 +0100
@@ -20,6 +20,7 @@
 #include <stdlib.h>
 #include <stdarg.h>
 #include <string.h>
+#include "swap.h"
 
 #define MAXLEN 70
 #define NO_ERR 0
@@ -48,20 +49,19 @@
 int found_palette;
 
 typedef struct PCX_HEADER {
-  char manufacturer;
-  char version;
-  char encoding;
-  char bits_per_pixel;
-  short  xmin,ymin;
-  short  xmax,ymax;
-  short  hres;
-  short  vres;
-  char palette16[48];
-  char reserved;
-  char color_planes;
-  short  bytes_per_line;
-  short  palette_type;
-  char filler[58];
+  int8_t  manufacturer;
+  int8_t  version;
+  int8_t  encoding;
+  int8_t  bits_per_pixel;
+  int16_t xmin, ymin;
+  int16_t xmax, ymax;
+  int16_t hres, vres;
+  int8_t  palette16[48];
+  int8_t  reserved;
+  int8_t  color_planes;
+  int16_t bytes_per_line;
+  int16_t palette_type;
+  int8_t  filler[58];
 } pcx_header;
 
 struct IMG {
@@ -250,6 +250,12 @@
     error_exit(1,"Couldn't Open %s",filename);
   fseek(infile,0L,SEEK_SET);
   fread(&pcxhead,sizeof(pcx_header),1,infile);
+  pcxhead.xmin = ltohs(pcxhead.xmin);
+  pcxhead.xmax = ltohs(pcxhead.xmax);
+  pcxhead.ymin = ltohs(pcxhead.ymin);
+  pcxhead.ymax = ltohs(pcxhead.ymax);
+  pcxhead.hres = ltohs(pcxhead.hres);
+  pcxhead.vres = ltohs(pcxhead.vres);
   image.xsize = (pcxhead.xmax-pcxhead.xmin) + 1;
   image.ysize = (pcxhead.ymax-pcxhead.ymin) + 1;
   Points = image.xsize * image.ysize;
Index: sabre-0.2.4b/src/mktextr3.c
===================================================================
--- sabre-0.2.4b.orig/src/mktextr3.c	2006-11-17 00:45:23.000000000 +0100
+++ sabre-0.2.4b/src/mktextr3.c	2006-11-17 01:22:03.000000000 +0100
@@ -26,6 +26,7 @@
 #include <stdarg.h>
 #include <string.h>
 #include <math.h>
+#include "swap.h"
 
 #define MAXLEN 70
 #define NO_ERR 0
@@ -68,20 +69,19 @@
 int found_palette;
 
 typedef struct PCX_HEADER {
-  char manufacturer;
-  char version;
-  char encoding;
-  char bits_per_pixel;
-  short  xmin,ymin;
-  short  xmax,ymax;
-  short  hres;
-  short  vres;
-  char palette16[48];
-  char reserved;
-  char color_planes;
-  short  bytes_per_line;
-  short  palette_type;
-  char filler[58];
+  int8_t  manufacturer;
+  int8_t  version;
+  int8_t  encoding;
+  int8_t  bits_per_pixel;
+  int16_t xmin, ymin;
+  int16_t xmax, ymax;
+  int16_t hres, vres;
+  int8_t  palette16[48];
+  int8_t  reserved;
+  int8_t  color_planes;
+  int16_t bytes_per_line;
+  int16_t palette_type;
+  int8_t  filler[58];
 } pcx_header;
 
 struct IMG {
@@ -418,6 +418,12 @@
     error_exit(1,"Couldn't Open %s",filename);
   fseek(infile,0L,SEEK_SET);
   fread(&pcxhead,sizeof(pcx_header),1,infile);
+  pcxhead.xmin = ltohs(pcxhead.xmin);
+  pcxhead.xmax = ltohs(pcxhead.xmax);
+  pcxhead.ymin = ltohs(pcxhead.ymin);
+  pcxhead.ymax = ltohs(pcxhead.ymax);
+  pcxhead.hres = ltohs(pcxhead.hres);
+  pcxhead.vres = ltohs(pcxhead.vres);
   image.xsize = (pcxhead.xmax-pcxhead.xmin) + 1;
   image.ysize = (pcxhead.ymax-pcxhead.ymin) + 1;
   fprintf(stderr,"xsize: %d, ysize %d\n",
Index: sabre-0.2.4b/src/rmptextr3.c
===================================================================
--- sabre-0.2.4b.orig/src/rmptextr3.c	2006-11-17 00:45:23.000000000 +0100
+++ sabre-0.2.4b/src/rmptextr3.c	2006-11-17 01:22:28.000000000 +0100
@@ -26,6 +26,7 @@
 #include <stdarg.h>
 #include <string.h>
 #include <math.h>
+#include "swap.h"
 
 #define MAXLEN 70
 #define NO_ERR 0
@@ -70,20 +71,19 @@
 int found_palette;
 
 typedef struct PCX_HEADER {
-  char manufacturer;
-  char version;
-  char encoding;
-  char bits_per_pixel;
-  short  xmin,ymin;
-  short  xmax,ymax;
-  short  hres;
-  short  vres;
-  char palette16[48];
-  char reserved;
-  char color_planes;
-  short  bytes_per_line;
-  short  palette_type;
-  char filler[58];
+  int8_t  manufacturer;
+  int8_t  version;
+  int8_t  encoding;
+  int8_t  bits_per_pixel;
+  int16_t xmin, ymin;
+  int16_t xmax, ymax;
+  int16_t hres, vres;
+  int8_t  palette16[48];
+  int8_t  reserved;
+  int8_t  color_planes;
+  int16_t bytes_per_line;
+  int16_t palette_type;
+  int8_t  filler[58];
 } pcx_header;
 
 struct IMG {
@@ -363,6 +363,12 @@
     error_exit(1,"Couldn't Open %s",filename);
   fseek(infile,0L,SEEK_SET);
   fread(&pcxhead,sizeof(pcx_header),1,infile);
+  pcxhead.xmin = ltohs(pcxhead.xmin);
+  pcxhead.xmax = ltohs(pcxhead.xmax);
+  pcxhead.ymin = ltohs(pcxhead.ymin);
+  pcxhead.ymax = ltohs(pcxhead.ymax);
+  pcxhead.hres = ltohs(pcxhead.hres);
+  pcxhead.vres = ltohs(pcxhead.vres);
   image.xsize = (pcxhead.xmax-pcxhead.xmin) + 1;
   image.ysize = (pcxhead.ymax-pcxhead.ymin) + 1;
   fprintf(stderr,"xsize: %d, ysize %d\n",
Index: sabre-0.2.4b/src/txtrmap.C
===================================================================
--- sabre-0.2.4b.orig/src/txtrmap.C	2006-11-17 00:45:27.000000000 +0100
+++ sabre-0.2.4b/src/txtrmap.C	2006-11-17 01:22:46.000000000 +0100
@@ -39,6 +39,7 @@
 #include <limits.h>
 #include <values.h>
 #include <string.h>
+#include "swap.h"
 #include "defs.h"
 #include "grafix.h"
 #include "vga_13.h"
@@ -184,9 +185,13 @@
 			if (open_libos(os,fname))
 			{
 #ifdef DEBIAN
-				os.write((char *)&map_w,sizeof(map_w));
-				os.write((char *)&map_h,sizeof(map_h));
-				os.write((char *)&n,sizeof(n));
+				uint32_t tmp;
+				tmp = ltohl(map_w);
+				os.write((char *)&tmp,sizeof(tmp));
+				tmp = ltohl(map_h);
+				os.write((char *)&tmp,sizeof(tmp));
+				tmp = ltohl(n);
+				os.write((char *)&tmp,sizeof(tmp));
 #else
 				os.write((unsigned char *)&map_w,sizeof(map_w));
 				os.write((unsigned char *)&map_h,sizeof(map_h));
@@ -204,7 +209,7 @@
 
 void TextrMap::read_compressed(int cflg)
 {
-unsigned int      n;
+uint32_t          n;
 char              *fname;
 FILE              *f;
 int               nread;
@@ -224,8 +229,11 @@
 	if ((f = fopen(path,open_params)) != NULL)
 	{
 		fread(&map_w,sizeof(map_w),1,f);
+		map_w = ltohl(map_w);
 		fread(&map_h,sizeof(map_h),1,f);
+		map_h = ltohl(map_h);
 		fread(&n,sizeof(n),1,f);
+		n = ltohl(n);
 		size = map_w * map_h;
 		csize = n;
 		cbytes = new unsigned char[csize];
Index: sabre-0.2.4b/src/txtrmap.h
===================================================================
--- sabre-0.2.4b.orig/src/txtrmap.h	2006-11-17 00:45:24.000000000 +0100
+++ sabre-0.2.4b/src/txtrmap.h	2006-11-17 00:45:27.000000000 +0100
@@ -41,8 +41,8 @@
 	unsigned char *bytes;
 public:
 	unsigned char *cbytes;
-	int map_w;
-	int map_h;
+	int32_t map_w;
+	int32_t map_h;
 	int trans_colr;
 	int delf;
 	char id[32];
Index: sabre-0.2.4b/src/swap.h
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ sabre-0.2.4b/src/swap.h	2006-11-17 01:21:30.000000000 +0100
@@ -0,0 +1,23 @@
+#include <inttypes.h>
+
+static inline uint16_t ltohs(uint16_t x)
+{
+    /* This is compile-time optimised with at least -O1 or -Os */
+    uint32_t const dummy = 0x12345678;
+    if(*(uint8_t const *)&dummy == 0x12)
+        return (x >> 8) | (x << 8);
+    else
+        return x;
+}
+
+static inline uint32_t ltohl(uint32_t x)
+{
+    /* This is compile-time optimised with at least -O1 or -Os */
+    uint32_t const dummy = 0x12345678;
+    if(*(uint8_t const *)&dummy == 0x12)
+        return (x >> 24) | ((x >> 8) & 0x0000ff00)
+                | ((x << 8) & 0x00ff0000) | (x << 24);
+    else
+        return x;
+}
+
